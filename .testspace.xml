<?xml version="1.0" encoding="UTF-8"?>
<schema version="1.0" manual="0">
  <root>
    <suite name="Install.prerequisites" state="1" id=".sh" description="**Install** system prerequisites ">
      <attributes>
        <![CDATA[# install standard system and development tools
sudo apt-get install wget unzip python make g++
# install GNU autotools 
sudo apt-get install cmake
# install GNU gcov results generator
sudo pip install gcovr 

]]>
      </attributes>
    </suite>
    <suite name="Download.framework" state="1" id=".sh" description="**Downloads** the Google Test framework from googlecode.com">
      <attributes>
        <![CDATA[wget https://googletest.googlecode.com/files/gtest-1.7.0.zip
unzip gtest-1.7.0.zip 
mv gtest-1.7.0 gtest
rm gtest-1.7.0.zip]]>
      </attributes>
    </suite>
    <suite name="Build.lib" state="1" id=".sh" description="**Builds** the Google Test library">
      <attributes>
        <![CDATA[cd gtest
mkdir build
cd build
cmake -Dgtest_build_samples=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS_DEBUG='-g -fprofile-arcs -ftest-coverage' ../
make clean gtest ]]>
      </attributes>
    </suite>
    <suite name="Build.samples" state="1" id=".sh" description="**Builds** the Google Test Samples">
      <attributes>
        <![CDATA[cd gtest/build
make ]]>
      </attributes>
    </suite>
    <suite name="Run.tests" state="1" id=".sh" description="Execute **all** of the sample test cases">
      <attributes>
        <![CDATA[cd gtest/build
rm -rf sample*.xml

./sample1_unittest --gtest_output=xml:sample1.xml
./sample2_unittest --gtest_output=xml:sample2.xml
./sample3_unittest --gtest_output=xml:sample3.xml
./sample4_unittest --gtest_output=xml:sample4.xml
./sample5_unittest --gtest_output=xml:sample5.xml
./sample6_unittest --gtest_output=xml:sample6.xml
./sample7_unittest --gtest_output=xml:sample7.xml
./sample8_unittest --gtest_output=xml:sample8.xml
./sample9_unittest --gtest_output=xml:sample9.xml
./sample10_unittest --gtest_output=xml:sample10.xml

# provide references to all of the generated results files
echo "$PWD/sample*.xml" > ${self.result}
]]>
      </attributes>
    </suite>
    <suite name="Generate.coverage" state="1" id=".sh" description="Code coverage based on latest run. Review the **Reports** tab for historical tracking">
      <attributes>
        <![CDATA[cd gtest
gcovr --root .. --filter ".*samples.*" --exclude ".*_unittest.*" -x -o build/coverage.xml

echo $PWD/build/coverage.xml > ${self.result}]]>
      </attributes>
    </suite>
  </root>
</schema>
